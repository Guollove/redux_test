{"ast":null,"code":"/**\r\n * 1 该文件是用于创建一个为Cout组件服务的reducer reducer的本质就是一个函数\r\n * 2 reducer函数会接到两个参数 分别为 之前的状态（preState） 动作对象（action）\r\n */\nimport { INCREMENT, DECREMENT } from './constant';\nconst initState = 0; //初始化状态\n\nexport default function countReducer() {\n  let preState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  //从action对象中获取：type data\n  const {\n    type,\n    data\n  } = action; //根据type决定如何加工数据\n\n  switch (type) {\n    case INCREMENT:\n      return preState + data;\n\n    case DECREMENT:\n      return preState - data;\n\n    default:\n      return preState;\n  }\n}","map":{"version":3,"names":["INCREMENT","DECREMENT","initState","countReducer","preState","action","type","data"],"sources":["C:/Users/Administrator/Desktop/redux_test/src/redux/count_reducer.js"],"sourcesContent":["/**\r\n * 1 该文件是用于创建一个为Cout组件服务的reducer reducer的本质就是一个函数\r\n * 2 reducer函数会接到两个参数 分别为 之前的状态（preState） 动作对象（action）\r\n */\r\n\r\nimport {INCREMENT,DECREMENT} from './constant'\r\n\r\nconst initState = 0 //初始化状态\r\nexport default function countReducer(preState=initState,action){\r\n    //从action对象中获取：type data\r\n    const {type,data} = action\r\n    //根据type决定如何加工数据\r\n    switch (type) {\r\n        case INCREMENT:\r\n            return preState+data\r\n        case DECREMENT:\r\n            return preState-data\r\n        default:\r\n            return preState\r\n    }\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAAQA,SAAR,EAAkBC,SAAlB,QAAkC,YAAlC;AAEA,MAAMC,SAAS,GAAG,CAAlB,C,CAAoB;;AACpB,eAAe,SAASC,YAAT,GAAgD;EAAA,IAA1BC,QAA0B,uEAAjBF,SAAiB;EAAA,IAAPG,MAAO;EAC3D;EACA,MAAM;IAACC,IAAD;IAAMC;EAAN,IAAcF,MAApB,CAF2D,CAG3D;;EACA,QAAQC,IAAR;IACI,KAAKN,SAAL;MACI,OAAOI,QAAQ,GAACG,IAAhB;;IACJ,KAAKN,SAAL;MACI,OAAOG,QAAQ,GAACG,IAAhB;;IACJ;MACI,OAAOH,QAAP;EANR;AAQH"},"metadata":{},"sourceType":"module"}