{"ast":null,"code":"/**\r\n * 该文件专门用于暴漏一个store对象 整个应用只有一个store对象\r\n */\n//引入createStore 专门用于创建redux中最为核心的store对象\nimport { legacy_createStore as createStore, applyMiddleware, combineReducers } from 'redux'; //引入为Count组件服务的reducer\n\nimport countReducer from './reducers/count'; //引入为person组件的reducer\n\nimport personReducer from './reducers/person'; //引入redux-thunk 用于支持异步action\n\nimport thunk from 'redux-thunk';\nconst allReducer = combineReducers({\n  he: countReducer,\n  rens: personReducer\n}); //暴露store\n\nexport default createStore(allReducer, applyMiddleware(thunk));","map":{"version":3,"names":["legacy_createStore","createStore","applyMiddleware","combineReducers","countReducer","personReducer","thunk","allReducer","he","rens"],"sources":["C:/Users/Administrator/Desktop/redux_test/src/redux/store.js"],"sourcesContent":["/**\r\n * 该文件专门用于暴漏一个store对象 整个应用只有一个store对象\r\n */\r\n\r\n\r\n//引入createStore 专门用于创建redux中最为核心的store对象\r\nimport {legacy_createStore as createStore,applyMiddleware,combineReducers} from 'redux'\r\n//引入为Count组件服务的reducer\r\nimport countReducer from './reducers/count'\r\n//引入为person组件的reducer\r\nimport personReducer from './reducers/person'\r\n//引入redux-thunk 用于支持异步action\r\nimport thunk from 'redux-thunk'\r\n\r\nconst allReducer = combineReducers({\r\n    he:countReducer,\r\n    rens:personReducer\r\n})\r\n\r\n//暴露store\r\nexport default createStore(allReducer,applyMiddleware(thunk))"],"mappings":"AAAA;AACA;AACA;AAGA;AACA,SAAQA,kBAAkB,IAAIC,WAA9B,EAA0CC,eAA1C,EAA0DC,eAA1D,QAAgF,OAAhF,C,CACA;;AACA,OAAOC,YAAP,MAAyB,kBAAzB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,mBAA1B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,UAAU,GAAGJ,eAAe,CAAC;EAC/BK,EAAE,EAACJ,YAD4B;EAE/BK,IAAI,EAACJ;AAF0B,CAAD,CAAlC,C,CAKA;;AACA,eAAeJ,WAAW,CAACM,UAAD,EAAYL,eAAe,CAACI,KAAD,CAA3B,CAA1B"},"metadata":{},"sourceType":"module"}